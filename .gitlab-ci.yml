include:
  - local: ldap-sdk-tools/.gitlab-ci.yml
  - local: pingaccess/.gitlab-ci.yml
  - local: pingauthorize/.gitlab-ci.yml
  - local: pingauthorizepap/.gitlab-ci.yml
  - local: pingcentral/.gitlab-ci.yml
  - local: pingdataconsole/.gitlab-ci.yml
  - local: pingdatasync/.gitlab-ci.yml
  - local: pingdelegator/.gitlab-ci.yml
  - local: pingdirectory/.gitlab-ci.yml
  - local: pingdirectoryproxy/.gitlab-ci.yml
  - local: pingfederate/.gitlab-ci.yml
  - local: pingintelligence/.gitlab-ci.yml
  - local: pingtoolkit/.gitlab-ci.yml
  - local: helm-tests/integration-tests/.gitlab-ci.yml
#  - local: apache-jmeter/.gitlab-ci.yml

stages:
  - initialization
  - foundation
  - products
  - test.smoke
  - test.integration
  - deploy
  - publish
  - archive
  - custom.image
  - final

default:
  before_script:
    - ci_scripts/before_script.sh
  services:
    - $PIPELINE_DEPS_REGISTRY/docker:23.0.2-dind
  image: $RUNNER_IMAGE_X86_64
################################################
# Default variables used by all jobs unless they
# are overridden by the job
#
#  - .5-1 cpu
#  - 1.9GB of memory with no elasticity
#  - poll timeout of 15 minutes (to release capacity)
################################################
variables:
  DOCKER_HOST: tcp://localhost:2375
  KUBERNETES_CPU_REQUEST: 500m
  KUBERNETES_CPU_LIMIT: 1000m
  KUBERNETES_MEMORY_REQUEST: 1900000000
  KUBERNETES_MEMORY_LIMIT: 1900000000
  KUBERNETES_POLL_TIMEOUT: 1200
  DOCKER_TLS_CERTDIR: ""
################################################
# For Docker Compose Tests, provide a kubernetes
# sizing of:
#
#  - 95% of a cpu up to 4x (380%)
#  - 1.9g of memory with no elasticity
################################################
# variables:
#   KUBERNETES_CPU_REQUEST: 950m
#   KUBERNETES_CPU_LIMIT: 3800m
#   KUBERNETES_MEMORY_REQUEST: 1900000000
#   KUBERNETES_MEMORY_LIMIT: 1900000000


################################################
#   _____ _   _ _____ _______
#  |_   _| \ | |_   _|__   __|
#    | | |  \| | | |    | |
#    | | | . ` | | |    | |
#   _| |_| |\  |_| |
#  |_____|_| \_|_____|  |_|
#
################################################
# Note: Platform agnostic
intel.i.checks:
  stage: initialization
  script:
    - ci_scripts/if_readme_only.sh
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^push$|^schedule$|^web$/'
      when: on_success

intel.i.unmerged:
  stage: initialization
  script:
    - ci_scripts/unmerged_changes.sh
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[skip build\]/i'
      when: never
    - if: '$CI_PIPELINE_SOURCE =~ /^push$|^schedule$|^web$/'
      when: on_success

intel.i.shellcheck:
  stage: initialization
  script:
    - ci_scripts/shellcheck.sh
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[skip build\]/i'
      when: never
    - if: '$CI_PIPELINE_SOURCE =~ /^push$|^schedule$|^web$/'
      when: on_success

intel.i.shfmt:
  stage: initialization
  script:
    - ci_scripts/shfmt.sh --diff
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[skip build\]/i'
      when: never
    - if: '$CI_PIPELINE_SOURCE =~ /^push$|^schedule$|^web$/'
      when: on_success

#####################################################################
#   ______ ____  _    _ _   _ _____       _______ _____ ____  _   _
#  |  ____/ __ \| |  | | \ | |  __ \   /\|__   __|_   _/ __ \| \ | |
#  | |__ | |  | | |  | |  \| | |  | | /  \  | |    | || |  | |  \| |
#  |  __|| |  | | |  | | . ` | |  | |/ /\ \ | |    | || |  | | . ` |
#  | |   | |__| | |__| | |\  | |__| / ____ \| |   _| || |__| | |\  |
#  |_|    \____/ \____/|_| \_|_____/_/    \_\_|  |_____\____/|_| \_|
#
#####################################################################
intel.f.pingfoundation:
  stage: foundation
  script:
    - ci_scripts/cleanup_docker.sh full
    - ci_scripts/build_foundation.sh
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: never
    - if: $CUSTOM_IMAGE_PIPELINE == "true"
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /\[skip build\]/i'
      when: never
    - if: '$CI_PIPELINE_SOURCE =~ /^push$|^schedule$|^web$/'
      when: on_success

arm.f.pingfoundation:
  stage: foundation
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/cleanup_docker.sh full
    - ci_scripts/build_foundation.sh
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: never
    - if: $CUSTOM_IMAGE_PIPELINE == "true"
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /\[skip build\]/i'
      when: never
    - if: '$CI_PIPELINE_SOURCE =~ /^push$|^schedule$|^web$/'
      when: on_success

################################################
#   _____       _     _ _     _
#  |  __ \     | |   | (_)   | |
#  | |__) |   _| |__ | |_ ___| |__
#  |  ___/ | | | '_ \| | / __| '_ \
#  | |   | |_| | |_) | | \__ \ | | |
#  |_|    \__,_|_.__/|_|_|___/_| |_|
#
################################################
p.github:
  stage: publish
  script:
    - git --version
    - ci_scripts/push_to_github.sh
    - ci_scripts/deploy_docs.sh
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: never
    - if: $CUSTOM_IMAGE_PIPELINE == "true"
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /\[skip products\]/i'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /\[skip deploy\]/i'
      when: never
    - if: '$PING_IDENTITY_SNAPSHOT =~ /--snapshot/'
      when: never

    - if: '$CI_COMMIT_REF_NAME =~ /^master$/'
      when: on_success
    - if: '$CI_COMMIT_TAG =~ /^\d{4}\.?\d*/'
      when: on_success

################################################
#   ______ _____ _   _          _
#  |  ____|_   _| \ | |   /\   | |
#  | |__    | | |  \| |  /  \  | |
#  |  __|   | | | . ` | / /\ \ | |
#  | |     _| |_| |\  |/ ____ \| |____
#  |_|    |_____|_| \_/_/    \_\______|
################################################

intel.clean-k8s:
  stage: final
  script:
    - ci_scripts/cleanup_kubernetes.sh
  when: always

arm.clean-k8s:
  stage: final
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/cleanup_kubernetes.sh
  when: always

intel.delete-old-k8s:
  stage: final
  script:
    - ci_scripts/cleanup_old_kubernetes.sh
  when: always

arm.delete-old-k8s:
  stage: final
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/cleanup_old_kubernetes.sh
  when: always

########################################################
#            _____   _____ _    _ _______      ________
#     /\   |  __ \ / ____| |  | |_   _\ \    / /  ____|
#    /  \  | |__) | |    | |__| | | |  \ \  / /| |__
#   / /\ \ |  _  /| |    |  __  | | |   \ \/ / |  __|
#  / ____ \| | \ \| |____| |  | |_| |_   \  /  | |____
# /_/    \_\_|  \_\\_____|_|  |_|_____|   \/   |______|
########################################################

a.ldap-sdk-tools:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product ldap-sdk-tools
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingaccess:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingaccess
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingauthorize:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingauthorize
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingauthorizepap:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingauthorizepap
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingcentral:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingcentral
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingdataconsole:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingdataconsole
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingdatasync:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingdatasync
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingdelegator:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingdelegator
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingdirectory:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingdirectory
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingdirectoryproxy:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingdirectoryproxy
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingfederate:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingfederate
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingintelligence:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingintelligence
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

a.pingtoolkit:
  stage: archive
  retry: 2
  script:
    - ci_scripts/archive_images.sh --product pingtoolkit
  rules:
    - if: $ARCHIVE_PIPELINE == "true"
      when: on_success
    - when: never

###################################################################################
#   _____ _    _  _____ _______ ____  __  __   _____ __  __          _____ ______
#  / ____| |  | |/ ____|__   __/ __ \|  \/  | |_   _|  \/  |   /\   / ____|  ____|
# | |    | |  | | (___    | | | |  | | \  / |   | | | \  / |  /  \ | |  __| |__
# | |    | |  | |\___ \   | | | |  | | |\/| |   | | | |\/| | / /\ \| | |_ |  __|
# | |____| |__| |____) |  | | | |__| | |  | |  _| |_| |  | |/ ____ \ |__| | |____
#  \_____|\____/|_____/   |_|  \____/|_|  |_| |_____|_|  |_/_/    \_\_____|______|
###################################################################################

intel.custom.image:
  stage: custom.image
  script:
    - ci_scripts/build_custom_image.sh --product $CUSTOM_PRODUCT_NAME --version $CUSTOM_PRODUCT_VERSION --os-shim $CUSTOM_OS_SHIM --jvm $CUSTOM_JVM_ID --sprint $CUSTOM_SPRINT_VERSION
  rules:
    - if: $CUSTOM_IMAGE_PIPELINE == "true"
      when: on_success
    - when: never

arm.custom.image:
  stage: custom.image
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/build_custom_image.sh --product $CUSTOM_PRODUCT_NAME --version $CUSTOM_PRODUCT_VERSION --os-shim $CUSTOM_OS_SHIM --jvm $CUSTOM_JVM_ID --sprint $CUSTOM_SPRINT_VERSION
  rules:
    - if: $CUSTOM_IMAGE_PIPELINE == "true"
      when: on_success
    - when: never



